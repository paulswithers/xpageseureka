<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xc="http://www.ibm.com/xsp/custom">

	<!-- Same as JavaCode_Merge XPage, except we add "and the UNID is #{javascript:user.getUniversalID()}"
	onto the end. The outputted HTML is much larger - no surprise there given the amount of extra
	characters. But the server's processing of the Java class is slower by a greater proportion
	than just adding another EL call.
	The conclusion: SSJS calls are slower than EL. The Bonus_JavaCode_Java_EL and 
	Bonus_JavaCode_Java_Method XPages will reinforce this. -->

	<xp:this.data>
		<xp:dominoView var="view1" viewName="AllContacts"></xp:dominoView>
	</xp:this.data>
	
	<xc:appLayout>
		<xp:this.facets>
			<xp:repeat id="repeat1" rows="50000" indexVar="count" var="user"
				xp:key="facet_1" value="#{view1}">
				<xp:text value="Entry number #{count} is #{user.FirstName} #{user.LastName} 
				whose email address is #{user.EMail} and he/she lives in #{user.City}, #{user.State} 
				and the UNID is #{javascript:user.getUniversalID()}"></xp:text>
				<br />
			</xp:repeat>
		</xp:this.facets>
	</xc:appLayout>
</xp:view>
